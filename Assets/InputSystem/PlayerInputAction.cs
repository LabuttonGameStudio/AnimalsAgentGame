//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/InputSystem/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""Armadillo"",
            ""id"": ""2ced82fb-42f1-417b-9f4b-6fb0d0ff2a72"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""90a31f99-d4c6-46a4-a899-c7b07bcb79bd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b6ec137b-3ea5-4d80-92e2-292cd335c5e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""0cb6315f-6d0b-4e2b-a88d-e8aff306cd14"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""569c79b8-9921-4c8d-bcd6-1cfae56febb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""019ac342-a4a1-4605-9bd1-ec465fcea81f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltFire"",
                    ""type"": ""Button"",
                    ""id"": ""80bcabea-3316-4395-8c62-b89b94588081"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability1"",
                    ""type"": ""Button"",
                    ""id"": ""35e9f65b-d734-4b1b-9874-81baa60e45dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9dff2411-ab37-4cc7-957d-95298465fcd9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""87d5722e-a7f1-438c-874b-63759a352a86"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fdd650dd-d8e6-4e79-ae18-830d7e539a77"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d67bdc00-b3de-4ae5-b9af-c5045d450b8d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5a527104-185d-4b34-8718-891bf39d2828"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""09e35993-c1db-455d-8934-3d3d402d3c64"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""606b8afe-abfe-408f-bed3-2039a5ac79cd"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea784fb1-96a1-4840-a8fe-f3fd28584d18"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bae47676-1747-42bc-b4dd-43e1115e7424"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5790b939-e7a2-4fb0-b080-9f2ef7b6a8b8"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AltFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c194d1c3-5eb4-4335-9ceb-20d778426a1b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Armadillo
        m_Armadillo = asset.FindActionMap("Armadillo", throwIfNotFound: true);
        m_Armadillo_Movement = m_Armadillo.FindAction("Movement", throwIfNotFound: true);
        m_Armadillo_Jump = m_Armadillo.FindAction("Jump", throwIfNotFound: true);
        m_Armadillo_Look = m_Armadillo.FindAction("Look", throwIfNotFound: true);
        m_Armadillo_Interact = m_Armadillo.FindAction("Interact", throwIfNotFound: true);
        m_Armadillo_Fire = m_Armadillo.FindAction("Fire", throwIfNotFound: true);
        m_Armadillo_AltFire = m_Armadillo.FindAction("AltFire", throwIfNotFound: true);
        m_Armadillo_Ability1 = m_Armadillo.FindAction("Ability1", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Armadillo
    private readonly InputActionMap m_Armadillo;
    private List<IArmadilloActions> m_ArmadilloActionsCallbackInterfaces = new List<IArmadilloActions>();
    private readonly InputAction m_Armadillo_Movement;
    private readonly InputAction m_Armadillo_Jump;
    private readonly InputAction m_Armadillo_Look;
    private readonly InputAction m_Armadillo_Interact;
    private readonly InputAction m_Armadillo_Fire;
    private readonly InputAction m_Armadillo_AltFire;
    private readonly InputAction m_Armadillo_Ability1;
    public struct ArmadilloActions
    {
        private @PlayerInputAction m_Wrapper;
        public ArmadilloActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Armadillo_Movement;
        public InputAction @Jump => m_Wrapper.m_Armadillo_Jump;
        public InputAction @Look => m_Wrapper.m_Armadillo_Look;
        public InputAction @Interact => m_Wrapper.m_Armadillo_Interact;
        public InputAction @Fire => m_Wrapper.m_Armadillo_Fire;
        public InputAction @AltFire => m_Wrapper.m_Armadillo_AltFire;
        public InputAction @Ability1 => m_Wrapper.m_Armadillo_Ability1;
        public InputActionMap Get() { return m_Wrapper.m_Armadillo; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ArmadilloActions set) { return set.Get(); }
        public void AddCallbacks(IArmadilloActions instance)
        {
            if (instance == null || m_Wrapper.m_ArmadilloActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_ArmadilloActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Fire.started += instance.OnFire;
            @Fire.performed += instance.OnFire;
            @Fire.canceled += instance.OnFire;
            @AltFire.started += instance.OnAltFire;
            @AltFire.performed += instance.OnAltFire;
            @AltFire.canceled += instance.OnAltFire;
            @Ability1.started += instance.OnAbility1;
            @Ability1.performed += instance.OnAbility1;
            @Ability1.canceled += instance.OnAbility1;
        }

        private void UnregisterCallbacks(IArmadilloActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Fire.started -= instance.OnFire;
            @Fire.performed -= instance.OnFire;
            @Fire.canceled -= instance.OnFire;
            @AltFire.started -= instance.OnAltFire;
            @AltFire.performed -= instance.OnAltFire;
            @AltFire.canceled -= instance.OnAltFire;
            @Ability1.started -= instance.OnAbility1;
            @Ability1.performed -= instance.OnAbility1;
            @Ability1.canceled -= instance.OnAbility1;
        }

        public void RemoveCallbacks(IArmadilloActions instance)
        {
            if (m_Wrapper.m_ArmadilloActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IArmadilloActions instance)
        {
            foreach (var item in m_Wrapper.m_ArmadilloActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_ArmadilloActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public ArmadilloActions @Armadillo => new ArmadilloActions(this);
    public interface IArmadilloActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnAltFire(InputAction.CallbackContext context);
        void OnAbility1(InputAction.CallbackContext context);
    }
}
